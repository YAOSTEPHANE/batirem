import getNodeName from "../dom-utils/getNodeName.js";
import {
  isHTMLElement
} from "../dom-utils/instanceOf.js";

function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var element = state.elements[name];

    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }

    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};

    try {
      Object.assign(element.style, style);
    } catch (e) {
      console.error(`Failed to apply styles to element ${name}:`, e);
      return;
    }

    Object.keys(attributes).forEach(function(name) {
      var value = attributes[name];

      if (value === false) {
        try {
          element.removeAttribute(name);
        } catch (e) {
          console.error(`Failed to remove attribute ${name} from element ${name}:`, e);
        }
      } else {
        try {
          element.setAttribute(name, value === true ? '' : value);
        } catch (e) {
          console.error(`Failed to set attribute ${name} on element ${name}:`, e);
        }
      }
    });
  });
}

function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: '0',
      top: '0',
      margin: '0'
    },
    arrow: {
      position: 'absolute'

