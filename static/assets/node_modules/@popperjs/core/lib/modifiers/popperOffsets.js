import computeOffsets from "../utils/computeOffsets.js";

/**
 * Calculates the offsets of the popper element relative to the reference element
 * @param {object} state - The state object containing reference and popper rectangles
 * @param {string} name - The name of the modifier
 * @returns {object} The modifier data object containing the offsets
 */
function popperOffsets({ state, name }) {
  if (!state || !name) {
    throw new Error("Invalid arguments provided to popperOffsets");
  }

  const { reference, popper } = state.rects;

  if (!reference || !popper) {
    throw new Error("Invalid reference or popper rectangles provided to popperOffsets");
  }

  try {
    const offsets = computeOffsets({
      reference,
      element: popper,
      strategy: "absolute",
      placement: state.placement,
    });

    return {
      ...state.modifiersData[name],
      ...offsets,
    };
  } catch (error) {
    console.error("Error calculating popper offsets:", error);
    return {};
  }
}

export default {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {},
};
