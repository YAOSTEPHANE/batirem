// Check if $grid-breakpoints is defined
@if not variable-exists( $grid-breakpoints ) {
  @error "Undefined variable: $grid-breakpoints";
}

// Check if $utilities is defined
@if not variable-exists( $utilities ) {
  @error "Undefined variable: $utilities";
}

// Check if $rfs-mq-value is defined
$rfs-mq-value: if(defined($rfs-mq-value), $rfs-mq-value, 0);

// Loop over each breakpoint
@each $breakpoint, $value in $grid-breakpoints {

  // Generate media query if needed
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    // Loop over each utility property
    @each $key, $utility in $utilities {
      // The utility can be disabled with `false`, thus check if the utility is a map first
      @if type-of($utility) == "map" {
        @if (map-get($utility, responsive) or $infix == "") {
          @include generate-utility($utility, $infix);
        }
      }
    }
  }
}

// RFS rescaling
@media (min-width: $rfs-mq-value) {
  @each $breakpoint, $value in $grid-breakpoints {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @if ( $value < $rfs-breakpoint ) {
      // Loop over each utility property
      @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        @if type-of($utility) == "map" and map-get($utility, rfs) {
          @if (map-get($utility, responsive) or $infix == "") {
            @include generate-utility($utility, $infix, true);
          }
        }
      }
    }
  }
}

// Print utilities
@media print {
  @each $key,
