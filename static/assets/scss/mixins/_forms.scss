// Mixin to select elements based on validation state
@mixin form-validation-state-selector($state) {
  $selectors: (
    ".was-validated &.#{$state}",
    "&.is-#{$state}"
  );

  @each $selector in $selectors {
    #{$selector} {
      @content;
    }
  }
}

// Mixin to style elements based on validation state
@mixin form-validation-state(
  $state,
  $color: null,
  $icon: null,
  $tooltip-color: null,
  $tooltip-bg-color: null,
  $focus-box-shadow: null
) {
  // Default values for variables
  $form-feedback-margin-top: 0.25rem !default;
  $form-feedback-font-size: 0.75rem !default;
  $form-feedback-font-style: italic !default;
  $form-feedback-tooltip-padding-y: 0.25rem !default;
  $form-feedback-tooltip-padding-x: 0.5rem !default;
  $form-feedback-tooltip-font-size: 0.75rem !default;
  $form-feedback-tooltip-line-height: 1.5 !default;
  $form-feedback-tooltip-border-radius: 0.25rem !default;
  $form-feedback-tooltip-margin-top: 0.1rem !default;
  $input-focus-width: 2px !default;
  $input-btn-focus-color-opacity: 0.25 !default;
  $enable-validation-icons: true !default;

  // Hide feedback elements by default
  .#{$state}-feedback,
  .#{$state}-tooltip {
    display: none;
  }

  // Style feedback elements
  .#{$state}-feedback {
    @extend %form-feedback;
  }

  .#{$state}-tooltip {
    @extend %form-tooltip;
  }

  // Show feedback elements when the parent is validated and has the given state
  @include form-validation-state-selector($state) {
    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }
  }

  // Style the form control
  .form-control {
    @include form-validation-state-selector($state) {
      border-color: $color;

      // Add validation icons if enabled
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-image: escape-svg($icon);
        background-repeat: no-repeat;
        background-position: right $input-height-inner-quarter center;
        background-size: $input-height-inner-half $input-height-inner-half;
      }

      // Style the focus state
      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }
  }

  // Style the textarea
  textarea.form-control {
    @include form-validation-state-selector($state) {
      // Add validation icons if enabled
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
      }
    }
  }

  // Style the form select
  .form-select {
    @include form-validation-state-selector($state) {
      border-color: $color;

      // Add validation icons if enabled
      @if $enable-validation-icons {
        padding-right: $form-select-feedback-icon-padding-end;
        background-image: escape-svg($form-select-indicator), escape-svg($icon);
        background-position: $form-select-bg-position, $form-select-feedback-icon-position;
        background-size: $form-select-bg-size, $form-select-feedback-icon-size;
      }

      // Style the focus state
      &:focus {
        border-color: $color;
        box-shadow: $focus-box-shadow;
      }
    }
  }

  // Style the form check input
  .form-check-input {
    @include form-validation-state-selector($state) {
      border-color: $color;

      // Style the checked state
      &:checked {
        background-color: $color;
      }

      // Style the focus state
      &:focus {
        box-shadow: $focus-box-shadow;
      }

      // Style the form check label
      ~ .form-check-label {
        color: $color;
      }
    }
  }

  // Style the form check inline input
  .form-check-inline
