/*
 * jquery.fullscreen v0.6.0
 * https://github.com/private-face/jquery.fullscreen
 *
 * Copyright (c) 2012â€“2016 Vladimir Zhuravlev
 * Released under the MIT license
 * https://github.com/private-face/jquery.fullscreen/blob/master/LICENSE
 *
 * Date: 2016-08-25
 **/
(function(global, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD
        define(['jquery'], function(jQuery) {
            return factory(jQuery);
        });
    } else if (typeof exports === 'object') {
        // CommonJS/Browserify
        factory(require('jquery'));
    } else {
        // Global
        factory(global.jQuery);
    }
}(this, function($) {

    function isDefined(a) {
        return typeof a !== 'undefined';
    }

    function extend() {
        return $.extend.apply(null, [{}].concat(Array.prototype.slice.call(arguments)));
    }

    function nativeFn(a, b) {
        var c;
        "string" == typeof a && (b = a, a = document);
        for (var d = 0; d < SUBST.length; ++d) {
            b = b.replace(SUBST[d].from, SUBST[d].to);
            for (var e = 0; e < VENDOR_PREFIXES.length; ++e)
                if (c = VENDOR_PREFIXES[e], c += 0 === e ? b : b.charAt(0).toUpperCase() + b.substr(1), isDefined(a[c])) return a[c]
        }
    }
    var SUBST = [
            {from: "", to: ""},
            {from: "exit", to: "cancel"},
            {from: "screen", to: "Screen"}
        ],
        VENDOR_PREFIXES = ["", "o", "ms", "moz", "webkit", "webkitCurrent"],
        ua = navigator.userAgent,
        fsEnabled = nativeFn("fullscreenEnabled"),
        parsedChromeUA = ua.match(/Android.*Chrome\/(\d+)\./),
        IS_ANDROID_CHROME = !!parsedChromeUA,
        CHROME_VERSION, ANDROID_CHROME_VERSION;
    IS_ANDROID_CHROME && (ANDROID_CHROME_VERSION = parseInt(parsedChromeUA[1]));
    var IS_NATIVELY_SUPPORTED = (!IS_ANDROID_CHROME || ANDROID_CHROME_VERSION > 37) && isDefined(nativeFn("fullscreenElement")) && (!isDefined(fsEnabled) || fsEnabled === !0),
        version = $.fn.jquery.split("."),
        JQ_LT_17 = parseInt(version[0]) < 2 && parseInt(version[1]) < 7,
        FullScreenAbstract = function() {
            this.__options = null, this._fullScreenElement = null, this.__savedStyles = {};
        };
    FullScreenAbstract.prototype = {
        native: nativeFn,
        _DEFAULT_OPTIONS: {
            styles: {
                boxSizing: "border-box",
                MozBoxSizing: "border-box",
                WebkitBoxSizing: "border-box"
            },
            toggleClass: null
        },
        __documentOverflow: "",
        __htmlOverflow: "",
        _preventDocumentScroll: function() {
            this.__documentOverflow = document.body.style.overflow, this.__htmlOverflow = document.documentElement.style.overflow, $(this._fullScreenElement).is("body, html") || $("body, html").css("overflow", "hidden")
        },
        _allowDocumentScroll: function() {
            document.body.style.overflow = this.__documentOverflow, document.documentElement.style.overflow = this.__htmlOverflow
        },
        _fullScreenChange: function() {
            this.__options && (this.isFullScreen() ? (this._preventDocumentScroll(), this._triggerEvents()) : (this._allowDocumentScroll(), this._revertStyles(), this._triggerEvents(), this._fullScreenElement = null))
        },
        _fullScreenError: function(a) {
            this.__options && (this._revertStyles(), this._fullScreenElement = null, a && $(document).trigger("fscreenerror", [a]))
        },
        _triggerEvents: function() {

